{"version":3,"sources":["images/holder.svg","services/blogs.js","reducers/notificationReducer.js","reducers/blogReducer.js","services/login.js","reducers/loginReducer.js","services/users.js","reducers/userReducer.js","reducers/store.js","components/LoginForm.js","components/Login.js","components/Users.js","components/User.js","hooks/useField.js","components/AddBlogForm.js","components/Blog.js","components/Blogs.js","components/Navbar.js","components/BlogDetails.js","App.js","index.js"],"names":["module","exports","baseUrl","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","console","log","post","update","id","url","put","updateComments","comment","text","setToken","newToken","remove","delete","setMessage","message","dispatch","type","notificationReducer","state","messageType","action","createBlog","newBlog","blogs","user","blogService","blog","newBlogs","concat","title","name","setTimeout","error","deleteBlog","objDel","window","confirm","remainingBlogs","filter","updateBlog","newObj","map","likes","updatedBlogs","blogReducer","login","credentials","loginReducer","userReducer","reducer","combineReducers","notification","users","store","createStore","composeWithDevTools","applyMiddleware","thunk","LoginForm","useDispatch","handleSubmit","event","preventDefault","obj","username","target","value","password","loginService","localStorage","setItem","JSON","stringify","Form","onSubmit","className","style","height","Group","controlId","Label","Control","placeholder","as","Row","Button","variant","width","margin","Login","useSelector","Card","marginTop","minWidth","maxWidth","Header","textalign","Body","Users","Table","striped","bordered","hover","i","key","to","length","User","useParams","find","Title","Text","Footer","display","justifyContent","alignItems","Spinner","animation","role","useField","useState","setValue","onChange","onReset","AddBlogForm","addBlog","Accordion","defaultActiveKey","Toggle","eventKey","Collapse","prototype","PropTypes","func","isRequired","Blog","object","Blogs","array","updateBog","deleteBog","sort","b","NavBar","handleLogOut","Navbar","collapseOnSelect","expand","bg","Brand","tag","Link","color","aria-controls","Nav","NavItem","activeClassName","inline","onClick","BlogDetails","addComment","updatedBlogComment","comments","updateBlogComents","Image","src","fluid","maxHeight","href","blogId","updatedLikes","author","Col","md","required","Feedback","date","Subtitle","seconds","Math","floor","Date","getTime","interval","timeSince","App","removeItem","useEffect","innitialiseBlogs","userService","loggedInUserJSON","getItem","parse","initialiseUser","Alert","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74dc5bfa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/holder.ee861f39.svg\";","import axios from 'axios';\r\nconst baseUrl = '/api/blogs/';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  return (token = `Bearer ${newToken}`);\r\n};\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  console.log('newObject', newObject);\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  console.log(response.data);\r\n  return response.data;\r\n};\r\n\r\nconst update = async (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const url = `${baseUrl}${id}`;\r\n  const response = await axios.put(url, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst updateComments = async (id, comment) => {\r\n  const url = `${baseUrl}${id}/comments`;\r\n  const response = await axios.put(url, { text: comment });\r\n  return response.data;\r\n};\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const url = `${baseUrl}${id}`;\r\n\r\n  const response = await axios.delete(url, config);\r\n  return response;\r\n};\r\n\r\nexport default { getAll, create, setToken, update, remove, updateComments };\r\n","/* eslint-disable indent */\r\n\r\nconst notificationReducer = (\r\n  state = { message: null, messageType: 'no-message' },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case 'NO-MESSAGE':\r\n      return { message: null, messageType: 'no-message' };\r\n    case 'MESSAGE':\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setMessage = (message = null) => {\r\n  if (!message) {\r\n    return (dispatch) => {\r\n      dispatch({\r\n        type: 'NO-MESSAGE',\r\n        data: message,\r\n      });\r\n    };\r\n  }\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'MESSAGE',\r\n      data: message,\r\n    });\r\n  };\r\n};\r\n\r\nexport default notificationReducer;\r\n","/* eslint-disable indent */\r\nimport blogService from '../services/blogs';\r\nimport { setMessage } from './notificationReducer';\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'INITIAL':\r\n      return action.data;\r\n    case 'NEW':\r\n      return action.data;\r\n    case 'UPDATE':\r\n      return action.data;\r\n    case 'DELETE':\r\n      return action.data;\r\n    case 'UNLOGGEDIN':\r\n      return [];\r\n    case 'UPDATE-COMMENT':\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const innitialiseBlogs = (user) => {\r\n  return async (dispatch) => {\r\n    const response = await blogService.getAll();\r\n    if (user) {\r\n      dispatch({\r\n        type: 'INITIAL',\r\n        data: response,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: 'UNLOGGEDIN',\r\n        data: [],\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createBlog = (newBlog, blogs, user) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const blog = await blogService.create(newBlog);\r\n      const newBlogs = blogs.concat(blog);\r\n      dispatch({\r\n        type: 'NEW',\r\n        data: newBlogs,\r\n      });\r\n\r\n      dispatch(\r\n        setMessage({\r\n          message: `a new blog ${newBlog.title} by ${user.name} added`,\r\n          messageType: 'success',\r\n        })\r\n      );\r\n\r\n      setTimeout(() => {\r\n        dispatch(setMessage());\r\n      }, 5000);\r\n    } catch (err) {\r\n      dispatch(\r\n        setMessage({ message: err.response.data.error, messageType: 'danger' })\r\n      );\r\n      setTimeout(() => {\r\n        dispatch(setMessage());\r\n      }, 5000);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteBlog = (objDel, blogs) => {\r\n  return async (dispatch) => {\r\n    if (window.confirm(`Remove blog ${objDel.title}`)) {\r\n      try {\r\n        await blogService.remove(objDel.id);\r\n        dispatch(\r\n          setMessage({\r\n            message: `${objDel.title} has been deleted`,\r\n            messageType: 'danger',\r\n          })\r\n        );\r\n\r\n        setTimeout(() => {\r\n          dispatch(setMessage());\r\n        }, 5000);\r\n\r\n        const remainingBlogs = blogs.filter((blog) => blog.id !== objDel.id);\r\n\r\n        dispatch({\r\n          type: 'DELETE',\r\n          data: remainingBlogs,\r\n        });\r\n      } catch (err) {\r\n        dispatch(\r\n          setMessage({\r\n            message: err.response.data.error,\r\n            messageType: 'danger',\r\n          })\r\n        );\r\n        setTimeout(() => {\r\n          dispatch(setMessage());\r\n        }, 5000);\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateBlog = (id, newObj, blogs) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await blogService.update(id, newObj);\r\n\r\n      const updatedBlogs = await blogs.map((blog) => {\r\n        if (blog.id === response.id) {\r\n          blog.likes += 1;\r\n        }\r\n        return blog;\r\n      });\r\n\r\n      dispatch({\r\n        type: 'UPDATE',\r\n        data: updatedBlogs,\r\n      });\r\n\r\n      dispatch(\r\n        setMessage({\r\n          message: `Successfully updated ${response.title}`,\r\n          messageType: 'success',\r\n        })\r\n      );\r\n\r\n      setTimeout(() => {\r\n        dispatch(setMessage());\r\n      }, 5000);\r\n    } catch (err) {\r\n      dispatch(\r\n        setMessage({ message: err.response.data.error, messageType: 'danger' })\r\n      );\r\n      setTimeout(() => {\r\n        dispatch(setMessage());\r\n      }, 5000);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateBlogComents = (id, comment, blogs) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await blogService.updateComments(id, comment);\r\n\r\n      const updatedBlogComment = blogs.map((blog) => {\r\n        if (blog.id === response.id) {\r\n          blog.comments = response.comments;\r\n        }\r\n        return blog;\r\n      });\r\n      dispatch({\r\n        type: 'UPDATE-COMMENT',\r\n        data: updatedBlogComment,\r\n      });\r\n    } catch (err) {\r\n      dispatch(\r\n        setMessage({ message: err.response.data.error, messageType: 'danger' })\r\n      );\r\n      setTimeout(() => {\r\n        dispatch(setMessage());\r\n      }, 5000);\r\n      console.log('Failed to get the comments');\r\n    }\r\n  };\r\n};\r\n\r\nexport default blogReducer;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/login/';\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login };\r\n","/* eslint-disable indent */\r\nimport loginService from '../services/login';\r\nimport blogService from '../services/blogs';\r\nimport { setMessage } from './notificationReducer';\r\n\r\nconst loginReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'INIT':\r\n      return null;\r\n    case 'LOGGEDIN':\r\n      return action.data;\r\n    case 'LOGIN':\r\n      return action.data;\r\n    case 'LOGOUT':\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initialiseUser = () => {\r\n  const loggedInUserJSON = window.localStorage.getItem('loggedInBlogAppUser');\r\n\r\n  if (loggedInUserJSON) {\r\n    return (dispatch) => {\r\n      const user = JSON.parse(loggedInUserJSON);\r\n      blogService.setToken(user.token);\r\n\r\n      dispatch({\r\n        type: 'LOGGEDIN',\r\n        data: user,\r\n      });\r\n    };\r\n  }\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'INIT',\r\n    });\r\n  };\r\n};\r\n\r\nexport const login = (obj) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const user = await loginService.login(obj);\r\n      blogService.setToken(user.token);\r\n      window.localStorage.setItem('loggedInBlogAppUser', JSON.stringify(user));\r\n      dispatch({\r\n        type: 'LOGIN',\r\n        data: user,\r\n      });\r\n    } catch (error) {\r\n      dispatch(\r\n        setMessage({\r\n          message: 'Wrong credentials. Check the username or password',\r\n          messageType: 'danger',\r\n        })\r\n      );\r\n\r\n      setTimeout(() => {\r\n        dispatch(setMessage());\r\n      }, 5000);\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return (dispatch) => {\r\n    window.localStorage.removeItem('loggedInBlogAppUser');\r\n    blogService.setToken(null);\r\n    dispatch({\r\n      type: 'LOGOUT',\r\n    });\r\n  };\r\n};\r\n\r\nexport default loginReducer;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/users/';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  return (token = `Bearer ${newToken}`);\r\n};\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  console.log('newObject', newObject);\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  console.log(response.data);\r\n  return response.data;\r\n};\r\n\r\nconst update = async (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const url = `${baseUrl}${id}`;\r\n  const response = await axios.put(url, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const url = `${baseUrl}${id}`;\r\n\r\n  const response = await axios.delete(url, config);\r\n  return response;\r\n};\r\n\r\nexport default { getAll, create, setToken, update, remove };\r\n","/* eslint-disable indent */\r\nimport userService from '../services/users';\r\n\r\nconst userReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'NO_USERS':\r\n      return null;\r\n    case 'GET_USERS':\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getUsers = () => {\r\n  return async (dispatch) => {\r\n    const users = await userService.getAll();\r\n\r\n    dispatch({\r\n      type: 'GET_USERS',\r\n      data: users,\r\n    });\r\n  };\r\n};\r\n\r\nexport default userReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport blogReducer from './blogReducer';\r\nimport loginReducer from './loginReducer';\r\nimport notificationReducer from './notificationReducer';\r\nimport userReducer from './userReducer';\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  user: loginReducer,\r\n  notification: notificationReducer,\r\n  users: userReducer,\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { login } from '../reducers/loginReducer';\r\n\r\nimport { Form, Button, Row } from 'react-bootstrap';\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const username = event.target.username.value;\r\n    const password = event.target.password.value;\r\n    dispatch(login({ username, password }));\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={(event) => handleSubmit(event)}\r\n      className=\"container\"\r\n      style={{ height: '100%' }}>\r\n      <Form.Group controlId=\"formGroupUsername\">\r\n        <Form.Label>Username</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter username\"\r\n          name=\"username\"\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formGroupPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" />\r\n      </Form.Group>\r\n      <Form.Group as={Row} controlId=\"formGroupLoginBtn\">\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"primary\"\r\n          style={{ width: '100%', margin: 'auto' }}>\r\n          {' '}\r\n          Login in\r\n        </Button>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nimport LoginForm from './LoginForm';\r\n\r\nconst Login = () => {\r\n  const { message, messageType } = useSelector((state) => state.notification);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Card\r\n        style={{\r\n          width: '70%',\r\n          height: '100%',\r\n          margin: 'auto auto',\r\n          marginTop: '10rem',\r\n          minWidth: '250px',\r\n          maxWidth: '400px',\r\n        }}>\r\n        <Card.Header style={{ textalign: 'center', width: '100%' }}>\r\n          <h3>Login to application</h3>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <div className={messageType}>\r\n            <p>{message}</p>\r\n          </div>\r\n          <LoginForm />\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Table } from 'react-bootstrap';\r\n\r\nconst Users = () => {\r\n  const users = useSelector((state) => state.users);\r\n  return (\r\n    <div>\r\n      <Row className=\"justify-content-md-center\">\r\n        <h2>Users</h2>\r\n      </Row>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Users</th>\r\n            <th>Number of blogs Created</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {users.map((user, i = 0) => {\r\n            i = i++;\r\n            return (\r\n              <tr key={user.id}>\r\n                <td>{i}</td>\r\n                <td>\r\n                  <Link to={`/users/${user.id}`}>{user.name}</Link>\r\n                </td>\r\n                <td>{user.blogs.length}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nimport { Card, Button, Spinner } from 'react-bootstrap';\r\n\r\nconst User = () => {\r\n  const users = useSelector((state) => state.users);\r\n  const id = useParams().id;\r\n  const user = users.find((user) => user.id === id);\r\n\r\n  if (!user) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}>\r\n        {' '}\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>{user.name}</h3>\r\n        <p className=\"muted\">{user.username}</p>\r\n      </div>\r\n      <h5 className=\"text-center\">My blogs</h5>\r\n      <hr></hr>\r\n      <ul>\r\n        {' '}\r\n        {user.blogs.map((blog) => (\r\n          // <li key={blog.id}>{blog.title}</li>\r\n          <Card className=\"text-center mb-2\" key={blog.id}>\r\n            <Card.Header>Featured</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>{blog.title}</Card.Title>\r\n              <Card.Text>\r\n                With supporting text below as a natural lead-in to additional\r\n                content.\r\n              </Card.Text>\r\n              <Link to={`/blogs/${blog.id}`}>\r\n                <Button variant=\"primary\">Go somewhere</Button>\r\n              </Link>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">2 days ago</Card.Footer>\r\n          </Card>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { useState } from 'react';\r\n\r\nconst useField = (type) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n  const onReset = () => {\r\n    setValue('');\r\n  };\r\n\r\n  return {\r\n    type,\r\n    value,\r\n    onChange,\r\n    onReset,\r\n  };\r\n};\r\n\r\nexport default useField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Card, Accordion, Button, Form } from 'react-bootstrap';\r\n\r\nimport useField from '../hooks/useField';\r\n\r\nconst AddBlogForm = ({ addBlog }) => {\r\n  const title = useField('text');\r\n  const url = useField('url');\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    addBlog({\r\n      title: title.value,\r\n      url: url.value,\r\n    });\r\n    title.onReset();\r\n    url.onReset();\r\n  };\r\n  return (\r\n    <div>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        <Card>\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} variant=\"primary\" eventKey=\"1\">\r\n              Create\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"formBasicTitle\">\r\n                  <Form.Label>Blog Title</Form.Label>\r\n                  <Form.Control {...title} placeholder=\"Enter blog title\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicUrl\">\r\n                  <Form.Label>Blog Url</Form.Label>\r\n                  <Form.Control {...url} placeholder=\"Url\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" id=\"createBtn\">\r\n                  Create\r\n                </Button>{' '}\r\n                <Accordion.Toggle as={Button} variant=\"danger\" eventKey=\"1\">\r\n                  Cancel\r\n                </Accordion.Toggle>\r\n              </Form>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddBlogForm.prototype = {\r\n  addBlog: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddBlogForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst Blog = ({ blog }) => {\r\n  return (\r\n    <Card className=\"mb-2 mt-2\">\r\n      <Card.Body>{blog.title}</Card.Body>\r\n      <Card.Footer>\r\n        <Link to={`/blogs/${blog.id}`}> Read more ..</Link>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBlog.prototype = {\r\n  blog: PropTypes.object.isRequired,\r\n};\r\nexport default Blog;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport AddBlogForm from './AddBlogForm';\r\nimport Blog from './Blog';\r\n\r\nimport { createBlog, deleteBlog, updateBlog } from '../reducers/blogReducer';\r\n\r\nconst Blogs = ({ user }) => {\r\n  const blogs = useSelector((state) => state.blogs);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const addBlog = async (obj) => {\r\n    // newBlog, blogs,user\r\n    dispatch(createBlog(obj, blogs, user));\r\n  };\r\n\r\n  const updateBog = async (id, obj) => {\r\n    // id, newObj, blogs\r\n    dispatch(updateBlog(id, obj, blogs));\r\n  };\r\n\r\n  const deleteBog = async (obj) => {\r\n    // objDel, blogs\r\n    dispatch(deleteBlog(obj, blogs));\r\n  };\r\n\r\n  // Sort the blogs by most likes\r\n  const sortBlogs = (array) => {\r\n    const sorted = array.sort((a, b) => {\r\n      return b.likes - a.likes;\r\n    });\r\n    return sorted;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Blogs</h3>\r\n      {/* <Toggable showButtonLabel=\"New Blog\" ref={createBlogRef}> */}\r\n      <AddBlogForm addBlog={addBlog}></AddBlogForm>\r\n      {/* </Toggable> */}\r\n\r\n      <div className=\"blog-list\">\r\n        {sortBlogs(blogs).map((blog) => (\r\n          <Blog\r\n            user={user}\r\n            blog={blog}\r\n            key={blog.id}\r\n            update={updateBog}\r\n            deleteBlog={deleteBog}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blogs;\r\n","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav, Form, NavItem, Button } from 'react-bootstrap';\r\n\r\nconst NavBar = ({ user, handleLogOut }) => {\r\n  return (\r\n    <div>\r\n      <Navbar collapseOnSelect expand=\"md\" bg=\"primary\" variant=\"dark\">\r\n        <Navbar.Brand>\r\n          <NavLink\r\n            tag={Link}\r\n            to=\"/\"\r\n            className=\"nav-link\"\r\n            style={{ color: '#fff' }}>\r\n            Blog App\r\n          </NavLink>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <NavItem>\r\n              <NavLink\r\n                tag={Link}\r\n                to=\"/\"\r\n                className=\"nav-link\"\r\n                activeClassName=\"active\">\r\n                Blogs\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                tag={Link}\r\n                to=\"/users\"\r\n                className=\"nav-link\"\r\n                activeClassName=\"active\">\r\n                Users\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <Navbar.Collapse className=\"justify-content-end mr-sm-2\">\r\n            <Navbar.Text>\r\n              Signed in as: <span style={{ color: '#fff' }}>{user}</span>\r\n            </Navbar.Text>\r\n          </Navbar.Collapse>\r\n          <Form inline className=\"ml-sm-2\">\r\n            <Button variant=\"outline-light\" onClick={handleLogOut}>\r\n              LogOut\r\n            </Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { updateBlog, updateBlogComents } from '../reducers/blogReducer';\r\nimport useField from '../hooks/useField';\r\n\r\nimport { Image, Spinner, Form, Col, Button, Card } from 'react-bootstrap';\r\nimport bg from '../images/holder.svg';\r\n\r\nconst BlogDetails = () => {\r\n  const blogs = useSelector((state) => state.blogs);\r\n  const id = useParams().id;\r\n  const comment = useField('textarea');\r\n\r\n  const blog = blogs.find((blog) => blog.id === id);\r\n\r\n  const dispatch = useDispatch();\r\n  const handleLike = () => {\r\n    const blogId = blog.id;\r\n    const updatedLikes = blog.likes + 1;\r\n    console.log(updatedLikes);\r\n    // id, newObj, blogs\r\n    dispatch(updateBlog(blogId, { likes: updatedLikes }, blogs));\r\n  };\r\n\r\n  const addComment = (event) => {\r\n    event.preventDefault();\r\n    dispatch(updateBlogComents(id, comment.value, blogs));\r\n    comment.onReset();\r\n  };\r\n\r\n  function timeSince(date) {\r\n    var seconds = Math.floor(new Date().getTime() / 1000 - date / 1000),\r\n      interval = Math.floor(seconds / 31536000);\r\n\r\n    if (interval > 1) return interval + 'years ago ';\r\n\r\n    interval = Math.floor(seconds / 2592000);\r\n    if (interval > 1) return interval + 'mpnths ago';\r\n\r\n    interval = Math.floor(seconds / 86400);\r\n    if (interval >= 1) return interval + 'days ago';\r\n\r\n    interval = Math.floor(seconds / 3600);\r\n    if (interval >= 1) return interval + 'hrs ago';\r\n\r\n    interval = Math.floor(seconds / 60);\r\n    if (interval > 1) return interval + 'minutes ago ';\r\n\r\n    return Math.floor(seconds) + 'secs ago';\r\n  }\r\n  // const date = (dat) => {\r\n  //   return [new Date(dat).getTime(), Date().now()];\r\n  // };\r\n\r\n  // console.log(timeSince('1588258259860'));\r\n  // console.log(timeConverter('1588320479950'));\r\n  if (!blog) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}>\r\n        {' '}\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <Image\r\n          src={bg}\r\n          fluid\r\n          style={{\r\n            maxWidth: '100%',\r\n            maxHeight: '300px !important',\r\n            width: '100%',\r\n          }}\r\n        />\r\n      </div>\r\n      <h2>{blog.title}</h2>\r\n\r\n      <p>\r\n        <a href={blog.url} target=\"blank\">\r\n          {blog.url}\r\n        </a>\r\n      </p>\r\n\r\n      <p>\r\n        {blog.likes} likes\r\n        <Button className=\"ml-2\" variant=\"primary\" onClick={handleLike}>\r\n          like\r\n        </Button>\r\n      </p>\r\n\r\n      <p>added by {blog.author}</p>\r\n      <hr />\r\n\r\n      <div className=\"container\">\r\n        <h3>{blog.comments.length} comments</h3>\r\n        <Form onSubmit={(event) => addComment(event)}>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\r\n              {/* <Form.Label>City</Form.Label> */}\r\n              <Form.Control\r\n                {...comment}\r\n                placeholder=\"Add comment ...\"\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please provide a valid city.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Col md=\"4\">\r\n              <Button type=\"submit\">Add Comment</Button>\r\n            </Col>\r\n          </Form.Row>\r\n        </Form>\r\n        <Card style={{ width: '100%' }}>\r\n          {blog.comments.map((comment) => {\r\n            return (\r\n              <Card key={comment.date} className=\"mb-2 mt-2\">\r\n                <Card.Text>{comment.text}</Card.Text>\r\n                <Card.Subtitle className=\"mb-2 ml-auto mr-4 text-muted\">\r\n                  {timeSince(comment.date)} ago\r\n                </Card.Subtitle>\r\n              </Card>\r\n            );\r\n          })}\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogDetails;\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\n// Action creators\r\nimport { innitialiseBlogs } from './reducers/blogReducer';\r\nimport { initialiseUser, logout } from './reducers/loginReducer';\r\nimport { getUsers } from './reducers/userReducer';\r\n\r\n// Components\r\nimport Login from './components/Login';\r\nimport Users from './components/Users';\r\nimport User from './components/User';\r\nimport Blogs from './components/Blogs';\r\nimport NavBar from './components/Navbar';\r\n\r\nimport './App.css';\r\nimport BlogDetails from './components/BlogDetails';\r\n\r\nconst App = () => {\r\n  const user = useSelector((state) => state.user);\r\n  const { message, messageType } = useSelector((state) => state.notification);\r\n\r\n  const handleLogOut = async () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(innitialiseBlogs(user));\r\n    dispatch(getUsers());\r\n  }, []);\r\n\r\n  // Check if there is a logged in user in localStorage\r\n  useEffect(() => {\r\n    dispatch(initialiseUser());\r\n  }, []);\r\n\r\n  if (user === null) {\r\n    return <Login />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavBar user={user.name} handleLogOut={handleLogOut} />\r\n\r\n      <div className=\"container\">\r\n        {/* <div className={messageType}> */}\r\n        <Alert variant={messageType}> {message}</Alert>\r\n        {/* </div> */}\r\n\r\n        <Switch>\r\n          <Route path=\"/users/:id\">\r\n            <User />\r\n          </Route>\r\n          <Route path=\"/users\">\r\n            <Users />\r\n          </Route>\r\n          <Route path=\"/blogs/:id\">\r\n            <BlogDetails />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Blogs user={user} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport store from './reducers/store';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}